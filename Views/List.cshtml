@model StudentRecordSearchModel
@inject IGenericAttributeService genericAttributeService
@inject IWorkContext workContext
@inject INopHtmlHelper NopHtml


@{
    Layout = "_AdminLayout";
    //page title
    ViewBag.PageTitle = "StudentInfo";
    //active menu item (system name)
    NopHtml.SetActiveMenuItemSystemName("StudentRecord");
}

@{
    const string hideSearchBlockAttributeName = "CategoryPage.HideSearchBlock";
    var hideSearchBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideSearchBlockAttributeName);
}

<div class="content-header clearfix">
    <h1 class="float-left">
       Student Record
    </h1>
    <div class="float-right">
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus-square"></i>
            Add
        </a>
        @await Component.InvokeAsync(typeof(AdminWidgetViewComponent), new { widgetZone = AdminWidgetZones.CategoryListButtons, additionalData = Model })
        <button type="button" id="delete-selected" class="btn btn-danger">
            <i class="far fa-trash-alt"></i>
           Delete
        </button>
        <nop-action-confirmation asp-button-id="delete-selected" />
    </div>
</div>

<section class="content">
    <div class="container-fluid">
        <div class="form-horizontal">
            <div class="cards-group">
                <div class="card card-default card-search">
                    <div class="card-body">
                        <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                            <div class="search-text">Search</div>
                            <div class="icon-search"><i class="fas fa-search" aria-hidden="true"></i></div>
                            <div class="icon-collapse"><i class="far fa-angle-@(!hideSearchBlock ? "up" : "down")" aria-hidden="true"></i></div>
                        </div>

                        <div class="search-body @(hideSearchBlock ? "closed" : "")">
                            <div class="row">
                               
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <div class="col-md-3">
                                            <nop-label asp-for="Name" />
                                        </div>
                                        <div class="col-md-9">
                                            <nop-editor asp-for="Name" />
                                            <span asp-validation-for="Name"></span>
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="col-md-3">
                                            <nop-label asp-for="Age" />
                                        </div>
                                        <div class="col-md-9">
                                            <nop-editor asp-for="Age"  />
                                            <span asp-validation-for="Age"></span>
                                        </div>
                                    </div>

                                </div>
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <div class="col-md-3">
                                            <nop-label asp-for="DateOfBirth" />
                                        </div>
                                        <div class="col-md-9">
                                            <nop-editor asp-for="DateOfBirth" />
                                            <span asp-validation-for="DateOfBirth"></span>
                                        </div>

                                    </div>
                                    <div class="form-group row">
                                        <label class="col-md-3" for="MaritalStatus">Marital Status</label>
                                        <div class="col-md-9">
                                            <select class="form-control" id="MaritalStatus" name="MaritalStatus">
                                                <option value="">Select</option>
                                                <option value="Married">Married</option>
                                                <option value="Single">Single</option>
                                            </select>
                                            <span asp-validation-for="MaritalStatus"></span>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="form-group row">
                                <div class="text-center col-12">
                                    <button type="button" id="search-categories" class="btn btn-primary btn-search"><i class="fas fa-search"></i>Search</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card card-default">
                    <div class="card-body">
                        @await Html.PartialAsync("Table", new DataTablesModel
                        {
                        Name = "log-grid",
                        UrlRead = new DataUrl("StudentList", "StudentRecord", null),
                        SearchButtonId = "search-categories",
                        Length = Model.PageSize,
                        LengthMenu = Model.AvailablePageSizes,
                        Filters = new List<FilterParameter>
                        {
                        new FilterParameter(nameof(Model.CreatedOnFrom)),
                        new FilterParameter(nameof(Model.CreatedOnTo)),
                        new FilterParameter(nameof(Model.Name)),
                        new FilterParameter(nameof(Model.Age))
                        },
                        ColumnCollection = new List<ColumnProperty>
                        {
                        new ColumnProperty(nameof(StudentRecordModel.Id))
                        {
                        IsMasterCheckBox = true,
                        Render = new RenderCheckBox("checkbox_log"),
                        ClassName =  NopColumnClassDefaults.CenterAll,
                        Width = "50"
                        },
                        new ColumnProperty(nameof(StudentRecordModel.Name))
                        {
                        Title = "Name",
                        Width = "100"
                        },
                        new ColumnProperty(nameof(StudentRecordModel.Age))
                        {
                        Title = "Age",
                        Encode = false
                        },
                        new ColumnProperty(nameof(StudentRecordModel.DateOfBirth))
                        {
                        Title = "Date of Birth",
                        Width = "200",
                        Render = new RenderDate()
                        },
                        new ColumnProperty(nameof(StudentRecordModel.MaritalStatus))
                        {
                        Title = "Marital Status",
                        Encode = true,

                        },
                        new ColumnProperty(nameof(StudentRecordModel.Id))
                        {
                        Title = "Edit",
                        Width = "80",
                        ClassName = NopColumnClassDefaults.Button,
                        Render = new RenderButtonEdit(new DataUrl("Edit"))
                        }
                        }
                        })

                        <script>
                            $(document).ready(function () {
                                //"delete selected" button
                                $("#delete-selected-action-confirmation-submit-button").bind("click", function () {
                                    var postData = {
                                        selectedIds: selectedIds
                                    };
                                    addAntiForgeryToken(postData);
                                    $.ajax({
                                        cache: false,
                                        type: "POST",
                                        url: "@(Url.Action("DeleteSelected", "StudentRecord"))",
                                        data: postData,
                                        traditional: true,
                                        error: function (jqXHR, textStatus, errorThrown) {
                                            showAlert('deleteSelectedFailed', errorThrown);
                                        },
                                        complete: function (jqXHR, textStatus) {
                                            if (jqXHR.status === 204) {

                                                return;
                                            }
                                            updateTable('#log-grid');
                                        }
                                    });
                                    $('#delete-selected-action-confirmation').modal('toggle');
                                    return false;
                                });
                            });
                        </script>
                        <nop-alert asp-alert-id="deleteSelectedFailed" />
                        <nop-alert asp-alert-id="nothingSelectedAlert" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
